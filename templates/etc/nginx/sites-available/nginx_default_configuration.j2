# nginx conf for uWSGI gateway

# http-redirects to https; even if using of hsts;
# usefull if users are typing your server-name w/out https://

server {
  listen          80;
  server_name     {{ url }};

  rewrite ^ https://{{ url }}$request_uri? permanent;

  # dummy redirect, if http+https-server-in-one
  if ($scheme = http) {
      return 301 https://{{ url }}$request_uri;
  }
}

# uwsgi upstream
upstream uwsgi_{{ websiteproject }} {
  # the socket file
  server unix:///run/uwsgi/app/{{ websiteproject }}/socket;
}

server {
    listen 443           ssl;
    listen [::]:443      ssl;
    server_name          {{ url }};

    ssl                         on;
    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                 RC4:HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:10m;
    ssl_session_timeout         10m;

    ssl_certificate     /etc/nginx/ssl/{{ websiteproject }}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ websiteproject }}.key;

    client_max_body_size {{ nginx_max_body_size }};

    # running in debug more for now. Uncomment these in order to serve the files
    # by NGINX
    # static location
    location /static {
      alias {{ django_deployment_root_folder }}/{{ url }}/current/static;
    }

    # media location, no protection
    location /media {
      alias {{ django_deployment_root_folder }}/{{ url }}/current/media;
      #internal;
    }

    location = / {
      uwsgi_pass uwsgi_{{ websiteproject }};
      include {{ django_deployment_root_folder }}/{{ url }}/uwsgi_params;
    }

    location / {
      uwsgi_pass uwsgi_{{ websiteproject }};
      include {{ django_deployment_root_folder }}/{{ url }}/uwsgi_params;
      uwsgi_read_timeout {{ uwsgi_read_timeout }};
    }

    # should restrict the access from an internal address?
    #location /admin {
    #  uwsgi_pass uwsgi_{{ websiteproject }};
    #  include {{ django_deployment_root_folder }}/{{ url }}/uwsgi_params;
    #}
}
